{"version":3,"sources":["redux/closestAmountReducer.js","redux/tableReducers.js","redux/rootReducer.js","components/FooterRow/FooterRow.jsx","components/TableRow/TableRow.jsx","components/Table/Table.jsx","components/TableForm/TableForm.jsx","App.js","index.js"],"names":["CREATE__CLOSEST","SET_TABLE","ADD_ONE_AMOUNT","DELETE_ROW","ADD_ROW","increaseAmount","cellId","cellAmount","type","payload","getTable","state","table","getClosestQuantity","closestQuantity","rootReducer","combineReducers","action","map","rowObj","rowArr","cell","id","amount","filter","FooterRow","React","memo","averageArr","arr","i","length","colunmSum","j","push","Math","random","round","calculateAverage","useSelector","className","TableRow","rowId","setClosestArr","closestArr","dispatch","useDispatch","useState","showPercent","setShowPercent","rowPercentAmount","setRowPercentAmount","rowSumAmount","reduce","sum","current","handleClosestArr","filteredDiff","row","item","abs","flat","sort","a","b","slice","useEffect","tableSumAmount","forEach","rowAmount","classnames","row__td_closest","find","onClick","onKeyDown","key","onMouseOver","onFocus","onMouseLeave","role","style","background","onBlur","deleteRow","Table","tableArr","TableForm","rows","setRows","columns","setColumns","closestAmount","setClosestAmount","onSubmit","event","preventDefault","cellObj","floor","createTable","htmlFor","min","max","placeholder","value","required","onChange","e","target","App","rowArrLength","createRow","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a28ecbf.chunk.js","sourcesContent":["const CREATE__CLOSEST = 'closest/CREATE__CLOSEST';\n\nexport const createClosestAmount = (quantity) => ({\n  type: CREATE__CLOSEST,\n  payload: quantity,\n});\n\nexport const closestAmountReducer = (closestQuantity = 0, action) => {\n  switch (action.type) {\n    case CREATE__CLOSEST:\n      return action.payload;\n    default:\n      return closestQuantity;\n  }\n};\n","const SET_TABLE = 'table/SET_TABLE';\nconst ADD_ONE_AMOUNT = 'table/ADD_ONE';\nconst DELETE_ROW = 'table/DELETE_ROW';\nconst ADD_ROW = 'table/ADD_ROW';\n\nexport const createTable = (rows, columns) => {\n  const tableArr = [];\n\n  for (let i = 0; i < +rows; ++i) {\n    const rowObj = { id: Math.random(), rowArr: [] };\n    for (let j = 0; j < +columns; ++j) {\n      const cellObj = {\n        id: Math.random(),\n        amount: Math.floor(Math.random() * 1000),\n      };\n      rowObj.rowArr.push(cellObj);\n    }\n    tableArr.push(rowObj);\n  }\n\n  return {\n    type: SET_TABLE,\n    payload: tableArr,\n  };\n};\n\nexport const increaseAmount = (cellId, cellAmount) => ({\n  type: ADD_ONE_AMOUNT,\n  payload: { cellId, cellAmount },\n});\n\nexport const deleteRow = (rowId) => ({\n  type: DELETE_ROW,\n  payload: rowId,\n});\n\nexport const createRow = (rowArrLength) => {\n  const rowObj = { id: Math.random(), rowArr: [] };\n  for (let j = 0; j < +rowArrLength; ++j) {\n    const cellObj = {\n      id: Math.random(),\n      amount: Math.floor(Math.random() * 1000),\n    };\n    rowObj.rowArr.push(cellObj);\n  }\n\n  return {\n    type: ADD_ROW,\n    payload: rowObj,\n  };\n};\n\nexport const tableReducer = (state = [], action) => {\n  switch (action.type) {\n    case SET_TABLE:\n      return action.payload;\n    case ADD_ONE_AMOUNT:\n      return state.map((rowObj) => ({\n        ...rowObj,\n        rowArr: rowObj.rowArr.map((cell) => {\n          if (cell.id !== action.payload.cellId) {\n            return cell;\n          }\n\n          return {\n            ...cell,\n            amount: action.payload.cellAmount + 1,\n          };\n        }),\n      }));\n    case DELETE_ROW:\n      return state.filter((rowObj) => rowObj.id !== action.payload);\n    case ADD_ROW:\n      return [\n        ...state,\n        action.payload,\n      ];\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { closestAmountReducer } from './closestAmountReducer';\nimport { tableReducer } from './tableReducers';\n\nexport const getTable = (state) => state.table;\nexport const getClosestQuantity = (state) => state.closestQuantity;\n\nexport const rootReducer = combineReducers({\n  table: tableReducer,\n  closestQuantity: closestAmountReducer,\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getTable } from '../../redux/rootReducer';\n\nfunction calculateAverage(arr) {\n  const averageArr = [];\n  for (let i = 0; i < arr[0].rowArr.length; ++i) {\n    let colunmSum = 0;\n    for (let j = 0; j < arr.length; ++j) {\n      colunmSum += arr[j].rowArr[i].amount;\n    }\n    averageArr.push({\n      id: Math.random(),\n      amount: Math.round(colunmSum / arr.length),\n    });\n  }\n  return averageArr;\n}\n\nexport const FooterRow = React.memo(() => {\n  const tableArr = useSelector(getTable);\n  const averageArr = calculateAverage(tableArr);\n\n  return (\n    <tr>\n      {averageArr.map((cell) => (\n        <th\n          className=\"row__th\"\n          key={cell.id}\n        >\n          {cell.amount}\n        </th>\n      ))}\n    </tr>\n  );\n});\n","/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { increaseAmount, deleteRow } from '../../redux/tableReducers';\nimport './TableRow.scss';\nimport { getClosestQuantity, getTable } from '../../redux/rootReducer';\n\nexport const TableRow = ({\n  rowArr, rowId, setClosestArr, closestArr,\n}) => {\n  const dispatch = useDispatch();\n  const table = useSelector(getTable);\n  const closestQuantity = useSelector(getClosestQuantity);\n\n  const [showPercent, setShowPercent] = useState(false);\n  const [rowPercentAmount, setRowPercentAmount] = useState(0);\n  const rowSumAmount = rowArr.reduce((sum, current) => (sum + current.amount), 0);\n\n  const handleClosestArr = (cellAmount, cellId) => {\n    const diff = table.map((row) => row.rowArr\n      .map((item) => ({ id: item.id, amount: Math.abs(item.amount - cellAmount) }))).flat();\n\n    const diffwithoutCell = diff.filter((item) => item.id !== cellId);\n\n    const filteredDiff = diffwithoutCell\n      .sort((a, b) => a.amount - b.amount)\n      .slice(0, closestQuantity);\n\n    setClosestArr(filteredDiff);\n  };\n\n  useEffect(() => {\n    let tableSumAmount = 0;\n    table.forEach((row) => {\n      const rowAmount = row.rowArr.reduce((sum, current) => (sum + current.amount), 0);\n      tableSumAmount += rowAmount;\n    });\n\n    setRowPercentAmount(Math.round((rowSumAmount / tableSumAmount) * 100));\n  }, [rowSumAmount, table]);\n\n  return (\n    <>\n      {rowArr.map((cell) => (\n        <td\n          className={classnames('row__td', {\n            row__td_closest: closestArr.find((item) => item.id === cell.id),\n          })}\n          key={cell.id}\n          onClick={() => {\n            dispatch(increaseAmount(cell.id, cell.amount));\n          }}\n          onKeyDown={({ key }) => {\n            if (key === 'Enter') {\n              dispatch(increaseAmount(cell.id, cell.amount));\n            }\n          }}\n          onMouseOver={() => handleClosestArr(cell.amount, cell.id)}\n          onFocus={() => handleClosestArr(cell.amount, cell.id)}\n          onMouseLeave={() => setClosestArr([])}\n          role=\"button\"\n        >\n          {cell.amount}\n        </td>\n      ))}\n      <th\n        className=\"row__th\"\n        style={{\n          background: showPercent\n            ? `linear-gradient(to bottom, #d3d3d3 ${100 - rowPercentAmount}%, #f00 ${100 - rowPercentAmount}% ${rowPercentAmount}%)`\n            : '#d3d3d3',\n        }}\n        onMouseOver={() => setShowPercent(true)}\n        onFocus={() => setShowPercent(true)}\n        onMouseLeave={() => setShowPercent(false)}\n        onBlur={() => setShowPercent(false)}\n      >\n        {showPercent\n          ? `${rowPercentAmount}%`\n          : rowSumAmount}\n      </th>\n      <td>\n        <button\n          className=\"row__delete-button\"\n          type=\"button\"\n          onClick={() => { dispatch(deleteRow(rowId)); }}\n        >\n          X\n        </button>\n      </td>\n    </>\n  );\n};\n\nTableRow.propTypes = {\n  rowArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  rowId: PropTypes.number.isRequired,\n  setClosestArr: PropTypes.func.isRequired,\n  closestArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { useState } from 'react';\nimport './Table.scss';\nimport { useSelector } from 'react-redux';\nimport { getTable } from '../../redux/rootReducer';\nimport { FooterRow } from '../FooterRow';\nimport { TableRow } from '../TableRow';\n\nexport const Table = () => {\n  const [closestArr, setClosestArr] = useState([]);\n  const tableArr = useSelector(getTable);\n\n  return (\n    <table className=\"table\">\n      <tbody>\n        {tableArr.map((row) => (\n          <tr\n            key={row.id}\n          >\n            <TableRow\n              rowArr={row.rowArr}\n              rowId={row.id}\n              setClosestArr={setClosestArr}\n              closestArr={closestArr}\n            />\n          </tr>\n        ))}\n      </tbody>\n\n      <tfoot>\n        <FooterRow />\n      </tfoot>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './TableForm.scss';\nimport { createTable } from '../../redux/tableReducers';\nimport { createClosestAmount } from '../../redux/closestAmountReducer';\n\nexport const TableForm = () => {\n  const [rows, setRows] = useState('');\n  const [columns, setColumns] = useState('');\n  const [closestAmount, setClosestAmount] = useState('');\n  const dispatch = useDispatch();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    dispatch(createClosestAmount(+closestAmount));\n    dispatch(createTable(rows, columns));\n  };\n\n  return (\n    <form\n      onSubmit={submitHandler}\n    >\n      <label\n        className=\"form__label\"\n        htmlFor=\"rows\"\n      >\n        Rows:\n      </label>\n      <input\n        className=\"form__input\"\n        type=\"number\"\n        min=\"1\"\n        max=\"20\"\n        placeholder=\"1-20\"\n        value={rows}\n        id=\"rows\"\n        required\n        onChange={(e) => setRows(e.target.value)}\n      />\n\n      <label\n        className=\"form__label\"\n        htmlFor=\"columns\"\n      >\n        Columns:\n      </label>\n      <input\n        className=\"form__input\"\n        type=\"number\"\n        min=\"1\"\n        max=\"20\"\n        placeholder=\"1-20\"\n        value={columns}\n        id=\"columns\"\n        required\n        onChange={(e) => setColumns(e.target.value)}\n      />\n\n      <label\n        className=\"form__label\"\n        htmlFor=\"closestAmount\"\n      >\n        Closest amount:\n      </label>\n      <input\n        className=\"form__input\"\n        type=\"number\"\n        min=\"1\"\n        max={(rows * columns) - 1}\n        value={closestAmount}\n        id=\"closestAmount\"\n        required\n        onChange={(e) => setClosestAmount(e.target.value)}\n      />\n\n      <button\n        className=\"form__submit-button\"\n        type=\"submit\"\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.scss';\nimport { Table } from './components/Table';\nimport { TableForm } from './components/TableForm';\nimport { getTable } from './redux/rootReducer';\nimport { createRow } from './redux/tableReducers';\n\nfunction App() {\n  const tableArr = useSelector(getTable);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      {!tableArr.length > 0 && (\n      <TableForm />\n      )}\n      {tableArr.length > 0 && (\n      <Table />\n      )}\n      {tableArr.length > 0 && tableArr.length < 20 && (\n      <button\n        className=\"add-row\"\n        type=\"button\"\n        onClick={() => dispatch(createRow(tableArr[0].rowArr.length))}\n      >\n        Add row\n      </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}